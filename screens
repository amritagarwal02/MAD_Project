
import { View, Text,StyleSheet,SafeAreaView,TouchableOpacity,Dimensions, Image, FlatList, Animated} from 'react-native';
import React, {useEffect,useState,useRef} from 'react';
import Ionicons from 'react-native-vector-icons/Ionicons';
import Slider from '@react-native-community/slider';
import songs from '../model/data'
//import TrackPlayer, * as reactNativeTrackPlayer from 'react-native-track-player';
import TrackPlayer from 'react-native-track-player';


const {width,height}=Dimensions.get('window');

// const setupPlayer=async()=>{
//   await TrackPlayer.setupPlayer();

//   await TrackPlayer.add(songs);
// }

const MusicPlayer = () => {

  const [songIndex,setSongIndex]=useState(0);
  const scrollX=useRef(new Animated.Value(0)).current;

  useEffect(()=>{
    scrollX.addListener(({value})=>{
      //console.log(`ScrollX:${value} | Device Width:${width}`);
      const index=Math.round(value/width);

      setSongIndex(index);
      //console.log(index);
    });
  })



  const renderSongs=({item,index})=>{
      return(
        <Animated.View style={style.mainImageWrapper}>
        <View style={[style.imageWrapper,style.elevation]}>
        <Image 
        source={item.artwork}
        style={style.musicImage}
        />

      </View>
      </Animated.View>
      )

  }
  return (
    <SafeAreaView style={style.container}>
    <View style={style.maincontainer}>
       

      {/* {image} */}
      
      <Animated.FlatList 
        renderItem={renderSongs}
        data={songs}
        keyExtractor={item=>item.id}
        horizontal
        pagingEnabled
        showsHorizontalScrollIndicator
        scrollEventThrottle={16}
        onScroll={Animated.event(
          [
            {
              nativeEvent:{
                contentOffset:{x: scrollX},
              },
            },
          ],
          {useNativeDriver:true},
        )}
      />

      {/* {Song content} */}

      <View>
        <Text style={[style.songTitle,style.songcontent]}>{songs[songIndex].title}</Text>
        <Text style={[style.songArtist,style.songcontent]}>{songs[songIndex].artist}</Text>

      </View>

      {/* {slider} */}
        <View>
          <Slider
          style={style.progressBar}
          value={10}
          minimumValue={0}
          maximumValue={100}
          thumbTintColor='white'
          minimumTrackTintColor='white'
          maximumTrackTintColor='white'
          onSlidingComplete={()=>{}}
          />

          {/* {Music duration} */}
          <View style={style.progressLevelDuration}>
                <Text style={style.progressLevelText}>00:00</Text>
                <Text style={style.progressLevelText}>00:00</Text>
          </View>

        </View>


      {/* {music controls} */}
      <View style={style.musicControlContainer}>
      <TouchableOpacity onPress={()=>{}}>
    <Ionicons name='play-skip-back-outline' size={35} color="white"></Ionicons>
    </TouchableOpacity>
   
    <TouchableOpacity onPress={()=>{}}>
    <Ionicons name='ios-pause-circle' size={50} color="white"></Ionicons>
    </TouchableOpacity>
   
    <TouchableOpacity onPress={()=>{}}>
    <Ionicons name='play-skip-forward-outline' size={35} color="white"></Ionicons>
    </TouchableOpacity>
      </View>
    </View>
    <View style={style.bottomContainer}>

      <View style={style.bottomIconWrapper}>
    <TouchableOpacity onPress={()=>{}}>
    <Ionicons name='heart-outline' size={30} color="white"></Ionicons>
    
    </TouchableOpacity>

    <TouchableOpacity onPress={()=>{}}>
    <Ionicons name='repeat' size={30} color="white"></Ionicons>
    
    </TouchableOpacity>
    <TouchableOpacity onPress={()=>{}}>
    <Ionicons name='share-outline' size={30} color="white"></Ionicons>
    
    </TouchableOpacity>

    <TouchableOpacity onPress={()=>{}}>
    <Ionicons name='ellipsis-horizontal' size={30} color="white"></Ionicons>
    
    </TouchableOpacity>
    </View>
    </View>
    </SafeAreaView>
  )
}

export default MusicPlayer

const style= StyleSheet.create({
    container: {
      flex:1,
      backgroundColor:"black",

    },

    maincontainer:{
      flex:1,
      alignItems:'center',
      justifyContent:'center',
    },

    bottomContainer: {
      width: width,
      alignItems:'center',
      paddingVertical:15,
      borderTopColor:"white",
      borderWidth:1,

    },
    bottomIconWrapper:{
      flexDirection:'row',
      justifyContent:'space-between',
      width:'88%',
    },

    imageWrapper:{
      width:width,
      height:340,
      marginBottom:20,
      marginTop:100,
      justifyContent:'center'
    },
    musicImage:{
      width:300,
      height:'100%',
      borderRadius:15,
      justifyContent:'center',
      marginLeft:25,

    },
    elevation:{
      elevation:5,
      shadowColor:'#ccc',
      shadowOffset:{
        width:5,
        height:5,
      },
      shadowOpacity:0.5,
      shadowRadius:3.84
    },
    songcontent:{
      textAlign:'center',
      color:"white"
    },
    songTitle:{
      fontSize:18,
      fontWeight:'600'
    },
    songArtist:{
      fontSize:16,
      fontWeight:'300'
    },
    progressBar:{
      width:335,
      height:40,
      marginTop:25,
      flexDirection:'row',
    },
    progressLevelDuration:{
      width:340,
      flexDirection:'row',
      justifyContent:'space-between',
    },
    progressLevelText:{
      color:'white',
      fontWeight:'500',
    },
    musicControlContainer:{
      flexDirection:'row',
      alignItems:'center',
      justifyContent:'space-between',
      width:'60%',
      marginTop:10,
      marginBottom:50
    },
    mainImageWrapper:{
      width:width,
      justifyContent:'center',
      marginBottom:20,
      marginTop:20,
      // marginLeft:30,
      // marginRight:30,
    
    }

  });
